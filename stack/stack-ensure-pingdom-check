#!/bin/bash

SCRIPT_NAME="stack-ensure-pingdom-check"

source "/usr/src/app/stack/utils" || fatal 'unable to load utils'

usage(){
  echo "USAGE: $SCRIPT_NAME"
  echo 'Description: ensure pingdom alerts for cluster'
  echo ''
  echo 'Arguments:'
  echo '  -h, --help        print this help text'
  echo '  -v, --version     print the version'
  echo 'Environment:'
  echo '  DEBUG             print debug output'
}

assert_required_config() {
  require_config_value '.'
  require_config_value '.services[]'
}

get_service_name() {
  local service="$1"
  echo "$service" | jq -r '.name'
}

ensure_pingdoms() {
  debug 'ensure pingdoms'
  local services=( $(get_config_array '.services[]') )
  for service in "${services[@]}"; do
    local name="$(get_service_name "$service")"
    stack ensure-pingdom-check "$name" || fatal "unable to ensure service $name"
  done
}

main() {
  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"

    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      *)
        if [ "${param::1}" == '-' ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        ;;
    esac
    shift
  done

  assert_required_config

  is_stack_empty || fatal 'Not initialized, run `create-cluster`'

  ensure_pingdoms || fatal 'unable to ensure pingdom'
}

main "$@"
