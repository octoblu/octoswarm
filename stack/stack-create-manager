#!/bin/bash

SCRIPT_NAME="stack-create-manager"

source "/usr/src/app/stack/utils" || fatal 'unable to load utils'

assert_required_params(){
  local ip_address="$1"

  if [ -n "$ip_address" ]; then
    return 0
  fi

  usage

  if [ -z "$ip_address" ]; then
    echo "ip_address is missing"
  fi

  exit 1
}

assert_required_env() {
  if [ -n "$STACK_NAME" ]; then
    return 0
  fi

  if [ -z "$STACK_NAME" ]; then
    echo "Missing env STACK_NAME. Are you running in an octoswarm session?"
  fi

  exit 1
}

usage(){
  echo "USAGE: $SCRIPT_NAME"
  echo ''
  echo 'Arguments:'
  echo '  -h, --help               print this help text'
  echo '  -t, --ec2-instance-type  ec2 instance type to spin up'
  echo '                           (default: t2.medium)'
  echo '  --docker-version         docker version to install'
  echo '                           (default: latest)'
  echo '  --ec2-tags               ec2 tags (comma delimited)'
  echo '  -v, --version            print the version'
  echo 'Environment:'
  echo '  DEBUG                    print debug output'
}

main() {
  local ec2_instance_type="t2.medium"
  local docker_version
  local ec2_tags

  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"
    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -t | --ec2-instance-type)
        ec2_instance_type="$value"
        shift
        ;;
      --ec2-tags)
        ec2_tags="$value"
        shift
        ;;
      --docker-version)
        docker_version="$value"
        shift
        ;;
      -v | --version)
        version
        exit 0
        ;;
      *)
        if [ "${param::1}" == '-' ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        ;;
    esac
    shift
  done

  local ip_address
  local machine_id
  ip_address="$(get_manager_private_ip)"
  assert_required_params "$ip_address"

  assert_required_env

  machine_id="$(swarm-generate-machine-id manager)"

  stack create-machine \
    --ec2-tags "$ec2_tags" \
    --ec2-instance-type "$ec2_instance_type" \
    --docker-version "$docker_version" \
    "$machine_id" || fatal 'unable to create machine'

  swarm-join-manager \
    --ip-address "$ip_address" \
    --machine-id "$machine_id" || fatal 'unable to join manager'
}

main "$@"
