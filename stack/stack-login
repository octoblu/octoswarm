#!/bin/bash

source "/usr/src/app/stack/utils" || fatal 'unable to load utils'

debug() {
  debug_core "stack-login" "$@"
}

script_directory(){
  local source="${BASH_SOURCE[0]}"
  local dir=""

  while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
    dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$(readlink "$source")"
    [[ $source != /* ]] && source="$dir/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done

  dir="$( cd -P "$( dirname "$source" )" && pwd )"

  echo "$dir"
}

usage(){
  echo 'USAGE: login'
  echo ''
  echo 'Description: Docker login that works'
  echo 'Arguments:'
  echo '  -h, --help         print this help text'
  echo '  -v, --version      print the version'
  echo ''
}

main() {
  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"
    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      *)
        if [ "${param::1}" == '-' -a "$param" != "--" ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        ;;
    esac
    shift
  done
  for machine_id in $(get_machine_names); do
    debug 'machine_id' $machine_id
    docker-machine ssh "$machine_id" \
      "sudo docker --config /root/.docker/ login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD"
  done
}

main "$@"
