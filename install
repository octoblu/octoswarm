#!/bin/bash

fatal() {
  local message="$1"
  echo "Error: $message"
  exit 1
}

link_bin() {
  ln -nsf $(script_directory)/bin/* ~/.bin
}

write_octoswarm_version() {
  cat $(script_directory)/VERSION > ~/.octoswarm-version
}

rm_old_bin() {
  if [ -f "$HOME/.bin/swarm-get-deployment-status" ]; then
    rm ~/.bin/swarm-get-deployment-status
  fi
  if [ -f "$HOME/.bin/swarm-start-service" ]; then
    rm ~/.bin/swarm-start-service
  fi
  if [ -f "$HOME/.bin/docker-build-project" ]; then
    rm ~/.bin/docker-build-project
  fi
  if [ -f "$HOME/.bin/swarm-create-machine" ]; then
    rm ~/.bin/swarm-create-machine
  fi
  if [ -f "$HOME/.bin/swarm-initialize" ]; then
    rm ~/.bin/swarm-initialize
  fi
  if [ -f "$HOME/.bin/swarm-init-service" ]; then
    rm ~/.bin/swarm-init-service
  fi
  if [ -f "$HOME/.bin/swarm-stop-service" ]; then
    rm ~/.bin/swarm-stop-service
  fi
  if [ -f "$HOME/.bin/swarm-remove-service" ]; then
    rm ~/.bin/swarm-remove-service
  fi
  if [ -f "$HOME/.bin/swarm-restart-service" ]; then
    rm ~/.bin/swarm-restart-service
  fi
  if [ -f "$HOME/.bin/configure-hub-on-all-services" ]; then
    rm ~/.bin/configure-hub-on-all-services
  fi
  if [ -f "$HOME/.bin/octodev-bootstrap" ]; then
    rm ~/.bin/octodev-bootstrap
  fi
  if [ -f "$HOME/.bin/swarm-migrate-to-dev" ]; then
    rm ~/.bin/swarm-migrate-to-dev
  fi
  if [ -f "$HOME/.bin/swarm-migrate-to-prod" ]; then
    rm ~/.bin/swarm-migrate-to-prod
  fi
  if [ -f "$HOME/.bin/swarm-migrate-to-prod-and-start" ]; then
    rm ~/.bin/swarm-migrate-to-prod-and-start
  fi
  if [ -f "$HOME/.bin/swarm-migrate-worker-to-prod" ]; then
    rm ~/.bin/swarm-migrate-worker-to-prod
  fi
}

script_directory(){
  local source="${BASH_SOURCE[0]}"
  local dir=""

  while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
    dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$(readlink "$source")"
    [[ $source != /* ]] && source="$dir/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done

  dir="$( cd -P "$( dirname "$source" )" && pwd )"

  echo "$dir"
}

usage(){
  echo 'USAGE: install.sh'
  echo ''
  echo 'Arguments:'
  echo '  -h, --help         print this help text'
  echo '  -v, --version      print the version'
}

version(){
  local directory="$(script_directory)"

  if [ -f "$directory/VERSION" ]; then
    cat "$directory/VERSION"
  else
    echo "unknown"
  fi
}

main() {
  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"
    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      *)
        if [ "${param::1}" == '-' ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        ;;
    esac
    shift
  done

  link_bin
  rm_old_bin
  write_octoswarm_version
  echo "* octoswarm installed (v$(version)) - you're all up to date now!"
}

main "$@"
