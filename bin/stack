#!/bin/bash

# shellcheck disable=SC1091
source "/usr/src/app/stack/utils" || fatal 'unable to load utils'

debug() {
  debug_core "stack" "$@"
}

usage(){
  echo 'USAGE: stack [--help,--version,--dry-run] <script-name> [options]'
  echo ''
  echo 'Arguments:'
  echo ''
  echo '  -h, --help         print this help text'
  echo '  -v, --version      print the version'
  echo '  --dry-run          print the commands instead of running them'
  echo ''
  echo 'Environment:'
  echo ''
  echo '  DEBUG              print debug output'
  echo '  OVERRIDE_SAY_YES_OVERRIDE  override "y" on any confirmation prompt'
  echo 'Commands:'
  echo ''
  get_commands
  echo ''
}

run_script() {
  local script="$1"; shift
  "$script" "$@"
}

get_commands() {
  for file in `find "$STACK_BIN_DIR" -type f -maxdepth 1 -iname 'stack-*'`; do
    echo "stack ${file/${STACK_BIN_DIR}\/stack\-/}"
  done
}

assert_stack_script() {
  local script_name="$1"
  case "$script_name" in
    ls | list)
      get_commands
      exit 0
      ;;
  esac
  if [ ! -f "$STACK_BIN_DIR/stack-$script_name" ]; then
    echo "The stack script does not exist, stack-$script_name"
    echo ''
    echo 'It must be one of the following scripts:'
    echo ''
    get_commands
    echo ''
    return 1
  fi
  return 0
}

main() {
  local script_name="$1"

  case "$script_name" in
    -h | --help | help)
      usage
      exit 0
      ;;
    -v | --version | version)
      version
      exit 0
      ;;
    --dry-run)
      warn "Using '--dry-run'"
      export DRY_RUN='true'
      shift;
      script_name="$1"
      ;;
  esac

  assert_stack_script "$script_name"

  if [ "$?" == "0" ]; then
    shift
    debug "running script stack-$script_name"
    run_script "$STACK_BIN_DIR/stack-$script_name" "$@"
    exit $?
  fi
}

main "$@"
