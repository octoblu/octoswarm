#!/bin/bash

source "/usr/src/app/stack/utils" || fatal 'unable to load utils'

debug() {
  debug_core "swarm-join-worker" "$@"
}

assert_required_params(){
  local machine_id="$1"
  local ip_address="$2"

  if [ -n "$machine_id" -a -n "$ip_address" ]; then
    return 0
  fi

  usage

  if [ -z "$machine_id" ]; then
    echo "machine_id is required"
  fi

  if [ -z "$ip_address" ]; then
    echo "ip_address is required"
  fi

  exit 1
}

usage(){
  echo 'USAGE: swarm-join-worker'
  echo ''
  echo 'Arguments:'
  echo '  -m, --machine-id   name of the machine to create'
  echo '  -i, --ip-address   ip address of the manager machine'
  echo '  -h, --help         print this help text'
  echo '  -v, --version      print the version'
  echo 'Environment:'
  echo '  DEBUG              print debug output'
}

join_worker() {
  local machine_id="$1"
  local ip_address="$2"
  docker $(docker-machine config "$machine_id") swarm join \
    --token "$(docker swarm join-token --quiet worker)" \
    "$ip_address:2377"
}

main() {
  local ip_address
  local machine_id
  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"
    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      -m | --machine-id)
        machine_id="$value"
        ;;
      -i | --ip-address)
        ip_address="$value"
        ;;
      *)
        if [ "${param::1}" == '-' ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        ;;
    esac
    shift
  done

  assert_required_params "$machine_id" "$ip_address"

  join_worker "$machine_id" "$ip_address"
}

main "$@"
