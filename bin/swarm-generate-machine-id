#!/bin/bash

assert_required_params(){
  local role_name="$1"

  if [ -n "$role_name" ]; then
    return 0
  fi

  usage

  if [ -z "$role_name" ]; then
    echo "role_name is missing"
  fi

  exit 1
}

assert_required_env() {
  if [ -n "$STACK_NAME" ]; then
    return 0
  fi

  if [ -z "$STACK_NAME" ]; then
    echo "Missing env STACK_NAME. Are you running in an octoswarm-init session?"
  fi

  exit 1
}

fatal() {
  local message="$1"
  echo "Error: $message"
  exit 1
}

script_directory(){
  local source="${BASH_SOURCE[0]}"
  local dir=""

  while [ -h "$source" ]; do # resolve $source until the file is no longer a symlink
    dir="$( cd -P "$( dirname "$source" )" && pwd )"
    source="$(readlink "$source")"
    [[ $source != /* ]] && source="$dir/$source" # if $source was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  done

  dir="$( cd -P "$( dirname "$source" )" && pwd )"

  echo "$dir"
}

usage(){
  echo 'USAGE: swarm-generate-machine-id <role_name>'
  echo ''
  echo 'Arguments:'
  echo '  -h, --help         print this help text'
  echo '  -v, --version      print the version'
}

version(){
  local directory="$(script_directory)"

  if [ -f "$directory/VERSION" ]; then
    cat "$directory/VERSION"
  else
    echo "unknown"
  fi
}

main() {
  local role_name

  while [ "$1" != "" ]; do
    local param="$1"
    local value="$2"
    case "$param" in
      -h | --help)
        usage
        exit 0
        ;;
      -v | --version)
        version
        exit 0
        ;;
      *)
        if [ "${param::1}" == '-' ]; then
          echo "ERROR: unknown parameter \"$param\""
          usage
          exit 1
        fi
        if [ -z "$role_name" ]; then
          role_name="${param}"
        fi
        ;;
    esac
    shift
  done

  assert_required_params "$role_name"

  assert_required_env

  local NEW_UUID=$(cat /dev/urandom | env LC_CTYPE=C tr -dc 'a-z0-9' | fold -w 6 | head -n 1)
  local machine_id="$STACK_NAME-$role_name-$NEW_UUID"

  echo "$machine_id"
}

main "$@"
